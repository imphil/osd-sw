/* Copyright 2018 The Open SoC Debug Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TERMINAL_H
#define TERMINAL_H

#include <pthread.h>
#include <stdlib.h>

#include <osd/cl_dem_uart.h>
#include <osd/hostmod.h>
#include <osd/osd.h>
#include <osd/packet.h>

#ifdef __cplusplus
extern "C" {
#endif

struct osd_terminal_ctx;

/**
 * Create a new osd_terminal.
 *
 * A reference to it will be stored in the given pointer.
 *
 * @param ctx the new terminal instance that will be created
 * @param log_ctx the context for the log output generated by this tool
 * @param host_controller_address the URL of a host controller
 * @param dem_uart_di_addr the DI-Address of the dem-uart module to connect to
 *
 * @return OSD_OK on success, any other value indicates an error
 */
osd_result osd_terminal_new(struct osd_terminal_ctx **ctx,
                            struct osd_log_ctx *log_ctx,
                            const char *host_controller_address,
                            uint16_t dem_uart_di_addr);

/**
 * Destroy a terminal instance.
 *
 * Must have been created using the osd_terminal_new function.
 *
 * @param ctx_p the osd_terminal to be destroyed
 *
 * @see osd_terminal_new
 */
void osd_terminal_free(struct osd_terminal_ctx **ctx_p);

/**
 * Connect to the remote terminal.
 *
 * This will connect the terminal to its host_controller, specified by
 * calling osd_terminal_new.
 *
 * @param ctx the context of the terminal that should be connected
 *
 * @return OSD_OK on success, any other value indicates an error
 *
 * @see osd_terminal_new
 */
osd_result osd_terminal_connect(struct osd_terminal_ctx *ctx);

/**
 * Disconnect the given terminal from its host controller.
 *
 * @param ctx the context of the terminal that should be disconnected
 *
 * @return OSD_OK on success, any other value indicates an error
 */
osd_result osd_terminal_disconnect(struct osd_terminal_ctx *ctx);

/**
 * Check if the given terminal is connected.
 *
 * @param ctx the terminal context whose connection state should be checked
 *
 * @return True if this host module is connected to a host controller,
 *         false otherwise.
 */
bool osd_terminal_is_connected(struct osd_terminal_ctx *ctx);

/**
 * Create a new device file and start passing data to the DEM-UART.
 *
 * The new device file will be created under '/dev/pts/', the absolute
 * path can be obtained by calling osd_terminal_get_pts_path().
 *
 * @param ctx the context of the terminal to be started
 *
 * @return OSD_OK on success, any other value indicates an error
 *
 * @see osd_terminal_get_pts_path
 */
osd_result osd_terminal_start(struct osd_terminal_ctx *ctx);

/**
 * Stop passing data between the device file and the DEM-UART.
 *
 * The device file will be removed by this function.
 *
 * @param ctx the terminal to be stopped
 *
 * @return OSD_OK on success, any other value indicates an error
 */
osd_result osd_terminal_stop(struct osd_terminal_ctx *ctx);

/**
 * Check if this terminal is currently started.
 *
 * @param ctx the context of the terminal
 *
 * @return True if this terminal is currently running, false otherwise.
 */
bool osd_terminal_is_started(struct osd_terminal_ctx *ctx);

/**
 * Get the pathname of the device file for this terminal.
 *
 * The returned string may not be modified, use strdup to
 * create a copy if you need to make any changes.
 *
 * @param ctx the context of the terminal
 *
 * @return a pointer to a string containing the pathname
 */
const char *osd_terminal_get_pts_path(struct osd_terminal_ctx *ctx);

#ifdef __cplusplus
}
#endif

#endif  // TERMINAL_H
